5c5b504f084e4c4d3e679dd0a565a9a2
"use strict";

var _interopRequireDefault = require("C:/Users/Otomfon/Desktop/weather-metrics/node_modules/@babel/runtime/helpers/interopRequireDefault.js").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = cityReducer;
exports.getCities = exports.fetchCity = void 0;

var _axios = _interopRequireDefault(require("axios"));

var _jsxDevRuntime = require("react/jsx-dev-runtime");

var _jsxFileName = "C:\\Users\\Otomfon\\Desktop\\weather-metrics\\src\\Redux\\Cities.js";
const GET_CITY = 'weather-app/cityReducer/getCities';
const url = 'https://restcountries.com/v3.1/region/africa';

const getCities = payload => ({
  type: GET_CITY,
  payload
});

exports.getCities = getCities;

const fetchCity = () => async dispatch => {
  const response = await _axios.default.get(url);
  const data = await response.data;
  const cities = [];

  try {
    data.forEach(el => {
      cities.push({
        country: el.name.common,
        flags: el.flags.png,
        capital: el.capital[0]
      });
    });
    dispatch(getCities(cities));
  } catch (error) {
    /*#__PURE__*/
    (0, _jsxDevRuntime.jsxDEV)("h2", {
      children: error
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 26,
      columnNumber: 5
    }, void 0);
  }
};

exports.fetchCity = fetchCity;

function cityReducer(state = [], action) {
  switch (action.type) {
    case GET_CITY:
      return action.payload;

    default:
      return state;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHRVRfQ0lUWSIsInVybCIsImdldENpdGllcyIsInBheWxvYWQiLCJ0eXBlIiwiZmV0Y2hDaXR5IiwiZGlzcGF0Y2giLCJyZXNwb25zZSIsImF4aW9zIiwiZ2V0IiwiZGF0YSIsImNpdGllcyIsImZvckVhY2giLCJlbCIsInB1c2giLCJjb3VudHJ5IiwibmFtZSIsImNvbW1vbiIsImZsYWdzIiwicG5nIiwiY2FwaXRhbCIsImVycm9yIiwiY2l0eVJlZHVjZXIiLCJzdGF0ZSIsImFjdGlvbiJdLCJzb3VyY2VzIjpbIkNpdGllcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuXG5jb25zdCBHRVRfQ0lUWSA9ICd3ZWF0aGVyLWFwcC9jaXR5UmVkdWNlci9nZXRDaXRpZXMnO1xuXG5jb25zdCB1cmwgPSAnaHR0cHM6Ly9yZXN0Y291bnRyaWVzLmNvbS92My4xL3JlZ2lvbi9hZnJpY2EnO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2l0aWVzID0gKHBheWxvYWQpID0+ICh7XG4gIHR5cGU6IEdFVF9DSVRZLFxuICBwYXlsb2FkLFxufSk7XG5cbmV4cG9ydCBjb25zdCBmZXRjaENpdHkgPSAoKSA9PiBhc3luYyAoZGlzcGF0Y2gpID0+IHtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQodXJsKTtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmRhdGE7XG4gIGNvbnN0IGNpdGllcyA9IFtdO1xuICB0cnkge1xuICAgIGRhdGEuZm9yRWFjaCgoZWwpID0+IHtcbiAgICAgIGNpdGllcy5wdXNoKHtcbiAgICAgICAgY291bnRyeTogZWwubmFtZS5jb21tb24sXG4gICAgICAgIGZsYWdzOiBlbC5mbGFncy5wbmcsXG4gICAgICAgIGNhcGl0YWw6IGVsLmNhcGl0YWxbMF0sXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBkaXNwYXRjaChnZXRDaXRpZXMoY2l0aWVzKSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgPGgyPntlcnJvcn08L2gyPjtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY2l0eVJlZHVjZXIoc3RhdGUgPSBbXSwgYWN0aW9uKSB7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlIEdFVF9DSVRZOlxuICAgICAgcmV0dXJuIGFjdGlvbi5wYXlsb2FkO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gc3RhdGU7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7OztBQUVBLE1BQU1BLFFBQVEsR0FBRyxtQ0FBakI7QUFFQSxNQUFNQyxHQUFHLEdBQUcsOENBQVo7O0FBRU8sTUFBTUMsU0FBUyxHQUFJQyxPQUFELEtBQWM7RUFDckNDLElBQUksRUFBRUosUUFEK0I7RUFFckNHO0FBRnFDLENBQWQsQ0FBbEI7Ozs7QUFLQSxNQUFNRSxTQUFTLEdBQUcsTUFBTSxNQUFPQyxRQUFQLElBQW9CO0VBQ2pELE1BQU1DLFFBQVEsR0FBRyxNQUFNQyxjQUFBLENBQU1DLEdBQU4sQ0FBVVIsR0FBVixDQUF2QjtFQUNBLE1BQU1TLElBQUksR0FBRyxNQUFNSCxRQUFRLENBQUNHLElBQTVCO0VBQ0EsTUFBTUMsTUFBTSxHQUFHLEVBQWY7O0VBQ0EsSUFBSTtJQUNGRCxJQUFJLENBQUNFLE9BQUwsQ0FBY0MsRUFBRCxJQUFRO01BQ25CRixNQUFNLENBQUNHLElBQVAsQ0FBWTtRQUNWQyxPQUFPLEVBQUVGLEVBQUUsQ0FBQ0csSUFBSCxDQUFRQyxNQURQO1FBRVZDLEtBQUssRUFBRUwsRUFBRSxDQUFDSyxLQUFILENBQVNDLEdBRk47UUFHVkMsT0FBTyxFQUFFUCxFQUFFLENBQUNPLE9BQUgsQ0FBVyxDQUFYO01BSEMsQ0FBWjtJQUtELENBTkQ7SUFPQWQsUUFBUSxDQUFDSixTQUFTLENBQUNTLE1BQUQsQ0FBVixDQUFSO0VBQ0QsQ0FURCxDQVNFLE9BQU9VLEtBQVAsRUFBYztJQUNkO0lBQUE7TUFBQSxVQUFLQTtJQUFMO01BQUE7TUFBQTtNQUFBO0lBQUE7RUFDRDtBQUNGLENBaEJNOzs7O0FBa0JRLFNBQVNDLFdBQVQsQ0FBcUJDLEtBQUssR0FBRyxFQUE3QixFQUFpQ0MsTUFBakMsRUFBeUM7RUFDdEQsUUFBUUEsTUFBTSxDQUFDcEIsSUFBZjtJQUNFLEtBQUtKLFFBQUw7TUFDRSxPQUFPd0IsTUFBTSxDQUFDckIsT0FBZDs7SUFDRjtNQUNFLE9BQU9vQixLQUFQO0VBSko7QUFNRCJ9