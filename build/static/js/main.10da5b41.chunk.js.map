{"version":3,"sources":["Redux/Cities.js","Components/Home/home.js","Redux/Weather.js","Components/Detail/WeatherCard/Card.js","Components/Detail/Detail.js","Components/Navbar/Navbar.js","App.js","Redux/configureStore.js","index.js"],"names":["GET_CITY","fetchCity","_ref","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","response","data","cities","wrap","_context","prev","next","axios","get","sent","forEach","el","push","country","name","common","flags","png","capital","type","payload","error","stop","_x","apply","this","arguments","Home","useDispatch","useEffect","cityData","useSelector","state","_useState","useState","_useState2","slicedToArray","postCity","setCity","react_default","a","createElement","className","index_esm","fi_index_esm","placeholder","onChange","e","str","target","value","filter","toLowerCase","includes","toLocaleLowerCase","map","react_router_dom","to","key","bs_index_esm","toUpperCase","src","alt","GET_DATA","fetchData","location","Weather_regeneratorRuntime","coodUrl","responseCord","_responseCord$data$co","lon","lat","url","weatherData","obj","objDaily","daily","_obj$current","dt","temp","humidity","wind_speed","sunrise","sunset","_obj$current$weather$","description","icon","timezone_offset","concat","coord","min","max","id","uuidv4","main","weather","desc","current","windSpeed","timezone","t0","Card","props","_p$props","convertTime","moment","utc","add","format","tb_index_esm","k","result","parseInt","toString","Math","trunc","convertKelToCelcious","wi_index_esm","ri_index_esm","Detail","useLocation","month","Date","toDateString","undefined","WeatherCard_Card","charAt","slice","b","datetime","toLocaleString","weekday","Navbar","io_index_esm","fa_index_esm","App","Components_Navbar_Navbar","react_router","path","element","home","Components_Detail_Detail","rootReducer","combineReducers","length","action","store","createStore","applyMiddleware","thunk","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","src_App"],"mappings":"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","file":"static/js/main.10da5b41.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst GET_CITY = 'weather-app/cityReducer/getCities';\n\nconst url = 'https://restcountries.com/v3.1/region/africa';\n\nexport const getCities = (payload) => ({\n  type: GET_CITY,\n  payload,\n});\n\nexport const fetchCity = () => async (dispatch) => {\n  const response = await axios.get(url);\n  const data = await response.data;\n  const cities = [];\n  try {\n    data.forEach((el) => {\n      cities.push({\n        country: el.name.common,\n        flags: el.flags.png,\n        capital: el.capital[0],\n      });\n    });\n    dispatch(getCities(cities));\n  } catch (error) {\n    // <h2>{error}</h2>;\n  }\n};\n\nexport default function cityReducer(state = [], action) {\n  switch (action.type) {\n    case GET_CITY:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GiAfrica } from 'react-icons/gi';\nimport { FiSearch } from 'react-icons/fi';\nimport { BsArrowRightCircle } from 'react-icons/bs';\nimport './Home.css';\nimport { Link } from 'react-router-dom';\nimport { fetchCity } from '../../Redux/Cities';\n\nfunction Home() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchCity());\n  }, []);\n\n  const cityData = useSelector((state) => state.cityData);\n\n  const [postCity, setCity] = useState('');\n  const dataSearch = (str) => setCity(str);\n\n  return (\n    <div className=\"home\">\n\n      <div className=\"home-header\">\n        <div className=\"header-logo center\">\n          <GiAfrica />\n        </div>\n        <div className=\"header-text\">\n          <h1 className=\"header-app-name\">My Weather Update</h1>\n          <p className=\"header-country\">AFRICA</p>\n        </div>\n      </div>\n\n      <section className=\"cities\">\n        <div className=\"search-box\">\n          <div className=\"search-icon\"><FiSearch /></div>\n          <input className=\"search-city\" type=\"text\" placeholder=\"SEARCH COUNTRY\" onChange={(e) => dataSearch(e.target.value)} />\n        </div>\n        <ul className=\"city-list\">\n          {\n            cityData.filter((value) => value.country\n              .toLowerCase().includes(postCity\n                .toLocaleLowerCase()))\n              .map((data) => (\n                <Link\n                  to=\"/detail\"\n                  key={data.capital}\n                  className=\"card-country\"\n                  state={data.capital === null ? '' : { country: data.country, capital: data.capital, flags: data.flags }}\n                >\n                  <p className=\"detail-btn\"><BsArrowRightCircle /></p>\n\n                  <p className=\"country-name\">{data.country.toUpperCase()}</p>\n\n                  <div className=\"flag-country\">\n                    <div className=\"img-flag\"><img src={data.flags} alt=\"flag\" /></div>\n\n                    <p className=\"country-capital\">{data.capital}</p>\n\n                  </div>\n\n                </Link>\n              ))\n            }\n\n        </ul>\n      </section>\n\n    </div>\n  );\n}\n\nexport default Home;\n","/* eslint-disable camelcase */\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst GET_DATA = 'weather-app/weatherReducer/getData';\n\nexport const getData = (payload) => ({\n  type: GET_DATA,\n  payload,\n});\n\nexport const fetchData = (location) => async (dispatch) => {\n  try {\n    const coodUrl = `https://api.openweathermap.org/data/2.5/weather?q=${location}&i&appid=f1354fda8bec32646187c58f25f48372`;\n    const responseCord = await axios.get(coodUrl);\n    const { lon, lat } = responseCord.data.coord;\n    const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly&appid=f1354fda8bec32646187c58f25f48372`;\n    const response = await axios.get(url);\n    const data = await response.data;\n    const weatherData = [];\n    const obj = data;\n    const objDaily = obj.daily;\n    const daily = [];\n\n    objDaily.forEach((el) => {\n      daily.push({\n        min: el.temp.min,\n        max: el.temp.max,\n        id: uuidv4(),\n        dt: el.dt,\n        main: el.weather[0].main,\n        desc: el.weather[0].description,\n        icon: el.weather[0].icon,\n      });\n    });\n\n    const {\n      dt, temp, humidity, wind_speed, sunrise, sunset,\n    } = obj.current;\n\n    const { description, icon } = obj.current.weather[0];\n    const { timezone_offset } = obj;\n\n    weatherData.dt = dt;\n    weatherData.temp = temp;\n    weatherData.humidity = humidity;\n    weatherData.windSpeed = wind_speed;\n    weatherData.sunrise = sunrise;\n    weatherData.sunset = sunset;\n    weatherData.daily = daily;\n    weatherData.desc = description;\n    weatherData.icon = icon;\n\n    weatherData.timezone = timezone_offset;\n    dispatch(getData(weatherData));\n  } catch (error) {\n    // <h2>error</h2>;\n  }\n};\n\nexport default function weatherReducer(state = [], action) {\n  switch (action.type) {\n    case GET_DATA:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import './Card.css';\nimport React from 'react';\nimport { WiHumidity } from 'react-icons/wi';\nimport { TbTemperatureCelsius } from 'react-icons/tb';\nimport { RiWindyFill } from 'react-icons/ri';\nimport { BsSunrise, BsSunset } from 'react-icons/bs';\nimport moment from 'moment';\n\nfunction Card(props) {\n  const p = props;\n  const {\n    temp, humidity, windSpeed, sunrise, sunset, timezone,\n  } = p.props;\n\n  const convertKelToCelcious = (k) => {\n    const number = parseInt(k, 10);\n    const result = (number - 273.15).toString();\n    const reply = Math.trunc(result);\n    return reply.toString();\n  };\n\n  const convertTime = (sunrise, timezone) => {\n    const x = moment.utc(sunrise, 'X').add(timezone, 'seconds').format('HH:mm a');\n    return x;\n  };\n\n  return (\n    <div>\n      <div className=\"card\">\n        <div className=\"card-body-2\">\n          <ul className=\"weather-list\">\n            <li>\n              <div className=\"card-icon\"><TbTemperatureCelsius /></div>\n              <p className=\"card-text\">Temperature :</p>\n              <p>{convertKelToCelcious(temp)}</p>\n            </li>\n            <li>\n              <div className=\"card-icon\"><WiHumidity /></div>\n              <p className=\"card-text\">Humidity :</p>\n              <p>{`${humidity} %`}</p>\n\n            </li>\n            <li className=\"card-icon\">\n              <div className=\"card-icon\"><RiWindyFill /></div>\n              <p className=\"card-text\">Wind Speed :</p>\n              <p>{ `${windSpeed} metre/sec`}</p>\n\n            </li>\n          </ul>\n\n          <div className=\"sun-display\">\n            <div className=\"sunrise\">\n              <p className=\"sunrise-text\">Sunrise</p>\n              <p className=\"sun-display-icon\"><BsSunrise /></p>\n              <p>{convertTime(sunrise, timezone)}</p>\n            </div>\n            <div className=\"sunset\">\n              <p className=\"sunrise-text\">Sunset</p>\n              <p className=\"sun-display-icon\"><BsSunset /></p>\n              <p>{convertTime(sunset, timezone)}</p>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchData } from '../../Redux/Weather';\n\nimport Card from './WeatherCard/Card';\nimport './Detail.css';\n\nfunction Detail() {\n  const location = useLocation();\n  const { capital } = location.state === null ? '' : location.state;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchData(capital));\n  }, []);\n  const weatherData = useSelector((state) => state.weatherData);\n\n  const {\n    dt, desc, daily, timezone, icon,\n  } = weatherData;\n\n  const dateObject = new Date(dt * 1000 - (timezone * 1000));\n  const month = dateObject.toDateString();\n\n  const getDay = (datetime) => {\n    const dayObject = new Date(datetime * 1000 - (timezone * 1000));\n    const day = dayObject.toLocaleString('en-US', { weekday: 'long' });\n    return day;\n  };\n\n  /* * Get temperature in degree celsious  */\n  const convertKelToCelcious = (a, b) => {\n    if (a === b || b === null) {\n      return '';\n    }\n    const min = parseInt(a, 10);\n    const max = parseInt(b, 10);\n    const avg = (min + max) / 2;\n    const result = (avg - 273.15);\n    const value = Math.trunc(result);\n    return value.toString();\n  };\n\n  const firstLetterUppercase = (str) => {\n    const capitalize = str.charAt(0).toUpperCase() + str.slice(1);\n    return capitalize;\n  };\n\n  return (\n    <div className=\"detail-pg\">\n      <div className=\"page\">\n        <div className=\"main-time\">\n          <h1 className=\"region\">{capital}</h1>\n          <h2 className=\"date\">{ month === undefined ? null : `${month}`}</h2>\n        </div>\n\n        <div className=\"desc-icon\">\n          <p className=\"weather-descs\">{`The weather now is ${desc}`}</p>\n          <div className=\"weather-icon\"><img src={`https://openweathermap.org/img/wn/${icon}.png`} alt=\"weather-icon\" /></div>\n        </div>\n        <Card props={weatherData} />\n\n        <div className=\"weekly-update\">\n          <h3 className=\"weekly-update-title\">Weekly Update</h3>\n          <ul className=\"weeks\">\n            { daily === undefined ? null\n              : daily.map((el) => (\n\n                <li key={el.id}>\n\n                  <div className=\"weekly-group\">\n                    <img src={`https://openweathermap.org/img/wn/${el.icon}.png`} alt=\"weather icon\" />\n                    <p className=\"weekly-desc\">{firstLetterUppercase(el.desc)}</p>\n                  </div>\n\n                  <div className=\"weekly-temp\">\n                    <p>\n                      { convertKelToCelcious(el.min, el.max)}\n                      {' '}\n                      C\n                    </p>\n                  </div>\n\n                  <p className=\"day\">\n                    {getDay(el.dt)}\n                  </p>\n\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Detail;\n","import React from 'react';\nimport './Navbar.css';\nimport { FaMicrophone } from 'react-icons/fa';\nimport { IoIosSettings, IoIosArrowBack } from 'react-icons/io';\nimport { Link } from 'react-router-dom';\n\nfunction Navbar() {\n  return (\n    <div className=\"navbar\">\n      <p className=\"arrowback\"><Link to=\"*\"><IoIosArrowBack /></Link></p>\n\n      <div className=\"nav-tools\">\n        <p className=\"microphone\"><FaMicrophone /></p>\n        <p><IoIosSettings /></p>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import { BrowserRouter } from 'react-router-dom';\nimport { Route, Routes } from 'react-router';\nimport './App.css';\nimport React from 'react';\nimport Home from './Components/Home/home';\nimport Detail from './Components/Detail/Detail';\nimport Navbar from './Components/Navbar/Navbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar />\n        <Routes>\n          <Route path=\"*\" element={<Home />} />\n          <Route path=\"/detail\" element={<Detail />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers, applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport cityReducer from './Cities';\nimport weatherReducer from './Weather';\n\nconst rootReducer = combineReducers({\n  weatherData: weatherReducer,\n  cityData: cityReducer,\n});\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './Redux/configureStore';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n);\n"],"sourceRoot":""}